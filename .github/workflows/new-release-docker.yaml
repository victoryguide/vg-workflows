name: Create new release for docker repo

on:
  workflow_call:
    inputs:
      build-args:
        description: |
          List of build-time variables (https://github.com/docker/build-push-action#inputs).
          Use BUILD_ARG_SECRET_X with single bracket to use secrets, for example:
            with:
              build-args: |
                --build-arg SECRET_TOKEN="${ secrets.BUILD_ARG_SECRET_1 }"
            secrets:
              BUILD_ARG_SECRET_1: $[double bracket] secrets.SECRET_TOKEN [double_bracet]
        required: false
        type: string
    secrets:
      BUILD_ARG_SECRET_1:
        required: false
      BUILD_ARG_SECRET_2:
        required: false
      BUILD_ARG_SECRET_3:
        required: false
      BUILD_ARG_SECRET_4:
        required: false
      BUILD_ARG_SECRET_5:
        required: false
      BUILD_ARG_SECRET_6:
        required: false
      BUILD_ARG_SECRET_7:
        required: false
      BUILD_ARG_SECRET_8:
        required: false
      BUILD_ARG_SECRET_9:
        required: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish-new-release:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.version-info.outputs.new_tag }}
      new_version: ${{ steps.version-info.outputs.new_version }}
      release_type: ${{ steps.version-info.outputs.release_type }}
      changelog: ${{ steps.version-info.outputs.changelog }}

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get new version information
        id: version-info
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          dry_run: true

      - name: Replace placeholder secrets in build-args with real values
        id: build-args-with-secrets
        run: |
          build_args="$BUILD_ARGS"
          for key in `echo $SECRETS_CONTEXT | jq -r 'keys | @sh' | sed "s/'//g"`
          do
            value=`echo $SECRETS_CONTEXT | jq -r ".${key}"`;
            build_args=$(echo "$build_args" | sed "s#\${ secrets.${key} }#${value}#g");
          done
          build_args="${build_args//$'\n'/'%0A'}"
          echo "::set-output name=build-args::$build_args"
        env:
          BUILD_ARGS: ${{ inputs.build-args }}
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: |
            VERSION="${{ steps.version-info.outputs.new_version }}"
            ${{ steps.build-args-with-secrets.outputs.build-args }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version-info.outputs.new_version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version-info.outputs.new_tag }}
          release_name: Release ${{ steps.version-info.outputs.new_tag }}
          body: ${{ steps.version-info.outputs.changelog }}
